/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.kirdia.smppclient;

import java.io.IOException;
import java.nio.charset.Charset;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;

/**
 *
 * @author kyriak
 */
public class SmppClientFrame extends javax.swing.JFrame {

    /**
     * Creates new form SmppClientFrame
     */
    public SmppClientFrame() {
        initComponents();
                riso8859 = new JRadioButton("iso-8859-1");
        rutf8 = new JRadioButton("utf-8");
        rgsm = new JRadioButton("gsm-7bit");
        ButtonGroup dataCodings = new ButtonGroup();
        dataCodings.add(rgsm);
        dataCodings.add(riso8859);
        dataCodings.add(rutf8);
//        panelSmpp.add(rgsm);
//        panelSmpp.add(riso8859);
//        panelSmpp.add(rutf8);
//        panelSmpp.add(rgsm, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 100, -1));
//        panelSmpp.add(riso8859, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 230, 100, -1));
//        panelSmpp.add(rutf8, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 250, 100, -1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSmppHost = new javax.swing.JTextField();
        txtSmppPort = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSmppUser = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSmppPass = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cmbSTon = new javax.swing.JComboBox();
        cmbSNpi = new javax.swing.JComboBox();
        cmbDTon = new javax.swing.JComboBox();
        cmbDNpi = new javax.swing.JComboBox();
        btnSmpp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaSmppStatus = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtSmppSender = new javax.swing.JTextField();
        txtSmppReceiver = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbDcs = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSmppText = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSmppRaw = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtSmppTextRes = new javax.swing.JTextArea();
        btnSmppSend = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtSmppStatus = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Connection details");

        jLabel2.setText("host:");

        jLabel3.setText("port:");

        jLabel4.setText("username:");

        jLabel5.setText("password:");

        jLabel6.setText("source ton:");

        jLabel7.setText("source npi:");

        jLabel8.setText("destination ton:");

        jLabel9.setText("destination npi:");

        cmbSTon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "5" }));

        cmbSNpi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1" }));

        cmbDTon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "5" }));

        cmbDNpi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1" }));

        btnSmpp.setText("Connect");
        btnSmpp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSmppMouseClicked(evt);
            }
        });

        txaSmppStatus.setEditable(false);
        txaSmppStatus.setColumns(20);
        txaSmppStatus.setRows(5);
        jScrollPane1.setViewportView(txaSmppStatus);

        jLabel10.setText("Construct smpp submit_sm");

        jLabel11.setText("originator:");

        jLabel12.setText("destination:");

        jLabel13.setText("data coding:");

        cmbDcs.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "8" }));

        jLabel14.setText("encoding:");

        jLabel15.setText("message text:");

        jLabel16.setText("raw bytes in encoding:");

        jLabel17.setText("result text in encoding:");

        txtSmppText.setColumns(20);
        txtSmppText.setRows(5);
        txtSmppText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSmppTextKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtSmppText);

        txtSmppRaw.setColumns(20);
        txtSmppRaw.setRows(5);
        jScrollPane3.setViewportView(txtSmppRaw);

        txtSmppTextRes.setColumns(20);
        txtSmppTextRes.setRows(5);
        jScrollPane4.setViewportView(txtSmppTextRes);

        btnSmppSend.setText("Submit message");
        btnSmppSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSmppSendMouseClicked(evt);
            }
        });

        txtSmppStatus.setColumns(20);
        txtSmppStatus.setRows(5);
        jScrollPane5.setViewportView(txtSmppStatus);

        jLabel18.setText("Output:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSmppHost, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                    .addComponent(txtSmppPort)
                                    .addComponent(txtSmppUser)
                                    .addComponent(txtSmppPass))
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbSTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbSNpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbDNpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1)
                                    .addComponent(btnSmpp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSmppSend)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel12)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(txtSmppReceiver, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addGap(27, 27, 27)
                                                    .addComponent(txtSmppSender, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jLabel10))
                                            .addComponent(jLabel15))
                                        .addGap(71, 71, 71)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addGap(49, 49, 49)
                                                .addComponent(cmbDcs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel16)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel14))))
                        .addGap(0, 16, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtSmppHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtSmppPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtSmppUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSmppPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addComponent(btnSmpp)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(cmbSTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(cmbSNpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(cmbDTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(cmbDNpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(23, 23, 23)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtSmppSender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(cmbDcs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtSmppReceiver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSmppSend)
                .addGap(22, 22, 22)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSmppMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSmppMouseClicked
        // TODO add your handling code here:
        handleSmppClient();
    }//GEN-LAST:event_btnSmppMouseClicked

    private void btnSmppSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSmppSendMouseClicked
        // TODO add your handling code here:
        submitSmppMessage();
    }//GEN-LAST:event_btnSmppSendMouseClicked

    private void txtSmppTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSmppTextKeyReleased
        String text = txtSmppText.getText();
        Charset charset;
        
        if (riso8859.isSelected()) {
            charset = Charset.forName("ISO-8859-1");
        }
        else if (rutf8.isSelected()) {
            charset = Charset.forName("UTF-8");
        }        
        else if (rgsm.isSelected()) {
            charset = Charset.forName("SCGSM");
        }
        else {
            charset = Charset.forName("SCGSM");
        }


        Charset gsm7bit = Charset.availableCharsets().get("SCGSM");
//        Charset iso8859 = Charset.forName("ISO-8859-1");
        byte[] bytes = text.getBytes(charset);
        String output="";
        for (byte abyte : bytes) {
//            output += Integer.toHexString(abyte) + " ";
            output += String.format("%x", abyte) + " ";
//            output += abyte + " ";
        }
        txtSmppRaw.setText(output);
        txtSmppTextRes.setText(new String(bytes, charset));          // TODO add your handling code here:
    }//GEN-LAST:event_txtSmppTextKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SmppClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SmppClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SmppClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SmppClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SmppClientFrame().setVisible(true);
            }
        });
    }

    public void handleSmppClient() {
        boolean connected = false;
            String host = txtSmppHost.getText().trim();
            String port = txtSmppPort.getText().trim();
            String user = txtSmppUser.getText().trim();
            String pass = txtSmppPass.getText().trim();
            Integer port1;
            try {
            port1 = Integer.parseInt(port);
        } catch (NumberFormatException e) {
            port1 = null;
        }
            Map params = new HashMap();
            params.put("host", host);
            params.put("port", port1);
            params.put("username", user);
            params.put("password", pass);        
        
        if (sclient == null) {
            
            if (port1 == null) {
                txaSmppStatus.append("..Parameters are wrong..");
                return;
            }            

            sclient = new SmppClient(params);
            try {
                connected = sclient.connect();
            } catch (IOException ex) {
                txaSmppStatus.append(ex.getMessage());
            }
            if (connected) {
                btnSmpp.setText("Disconnect");
            }
            else {
                btnSmpp.setText("Connect");                        
            }
            
            txaSmppStatus.append(sclient.getStatusText());
            System.out.println("aaa");
        }
        else if (sclient != null && !sclient.getStatus()) {
            sclient.setParams(params);
            try {
                connected = sclient.connect();
            } catch (IOException ex) {
                txaSmppStatus.setText(ex.getMessage());
            }
            if (connected) {
                btnSmpp.setText("Disconnect");
            }
            else {
                btnSmpp.setText("Connect");                        
            }
            txaSmppStatus.setText(sclient.getStatusText());
            System.out.println("bbb");
        }
        else if (sclient != null && sclient.getStatus()) {
            sclient.disconnect();
            btnSmpp.setText("Connect");
            txaSmppStatus.setText(sclient.getStatusText());
            System.out.println("ccc");
        }
    }
    

    public void submitSmppMessage() {
        String sender = txtSmppSender.getText().trim();
        String receiver = txtSmppReceiver.getText().trim();
        String text = txtSmppText.getText().trim();
        String dcs = cmbDcs.getSelectedItem().toString();
        Integer _dcs = Integer.parseInt(dcs);
        String output;
        
        Charset charset;
        if (riso8859.isSelected()) {
            charset = Charset.forName("ISO-8859-1");
        }
        else if (rutf8.isSelected()) {
            charset = Charset.forName("UTF-8");
        }        
        else if (rgsm.isSelected()) {
            charset = Charset.forName("SCGSM");
        }
        else {
            charset = Charset.forName("SCGSM");
        }        
        
        Charset gsm7bit = Charset.availableCharsets().get("CCPGSM");
        Charset iso8859 = Charset.forName("ISO-8859-1");
//        Charset iso8859 = Charset.forName("ISO-8859-1");
        Charset utf8 = Charset.forName("UTF-8");
        byte[] bytes;
        
        buildHex(text, 1);
        buildHex(text, 3);
        buildHex(text, 8);
        bytes = text.getBytes(charset);
        
        if (sclient != null && sclient.getStatus()) {
            output = sclient.sendSingleMessage(bytes, sender, receiver, _dcs);
            txtSmppStatus.append("\n" + output);
        }
        
    }  
    
    
    private void buildHex(String text, Integer dcs) {
        
        Charset charset;
        if (dcs == 3) {
            charset = Charset.forName("ISO-8859-1");
        }        
        else if (dcs == 1) {
            charset = Charset.forName("SCGSM");
        }
        else {
            charset = Charset.forName("UTF-8");
        }
//        Charset gsm7bit = Charset.availableCharsets().get("CCPGSM");
        byte[] bytes = text.getBytes(charset);
        String output="";
        for (byte abyte : bytes) {
//            output += Integer.toHexString(abyte) + " ";
            output +=  String.format("%x", abyte) + " ";
//            output += abyte + " ";
        }
        System.out.println(output);
    }    
    
        
    JRadioButton riso8859;
    JRadioButton rutf8;
    JRadioButton rgsm;
    private SmppClient sclient;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSmpp;
    private javax.swing.JButton btnSmppSend;
    private javax.swing.JComboBox cmbDNpi;
    private javax.swing.JComboBox cmbDTon;
    private javax.swing.JComboBox cmbDcs;
    private javax.swing.JComboBox cmbSNpi;
    private javax.swing.JComboBox cmbSTon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea txaSmppStatus;
    private javax.swing.JTextField txtSmppHost;
    private javax.swing.JTextField txtSmppPass;
    private javax.swing.JTextField txtSmppPort;
    private javax.swing.JTextArea txtSmppRaw;
    private javax.swing.JTextField txtSmppReceiver;
    private javax.swing.JTextField txtSmppSender;
    private javax.swing.JTextArea txtSmppStatus;
    private javax.swing.JTextArea txtSmppText;
    private javax.swing.JTextArea txtSmppTextRes;
    private javax.swing.JTextField txtSmppUser;
    // End of variables declaration//GEN-END:variables
}
